{{- if .Values.services.emergencyBrake.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: emergency-brake
  namespace: {{ .Values.namespace }}
  labels:
    app: emergency-brake
spec:
  replicas: 1
  selector:
    matchLabels:
      app: emergency-brake
  template:
    metadata:
      labels:
        app: emergency-brake
    spec:
      initContainers:
      - name: wait-for-rabbitmq
        image: busybox
        command:
          - 'sh'
          - '-c'
          - 'until nc -z rabbitmq.{{ .Values.rabbitmq.namespace }}.svc.cluster.local 5672; do echo waiting for rabbitmq; sleep 2; done;'
      containers:
      - name: emergency-brake
        image: "{{ .Values.services.emergencyBrake.image.repository }}:{{ .Values.services.emergencyBrake.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        env:
        - name: VEHICLE_ID
          value: "{{ .Values.namespace }}"
        - name: RABBITMQ_HOST
          value: "rabbitmq.{{ .Values.rabbitmq.namespace }}.svc.cluster.local"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: username
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: password
---
apiVersion: v1
kind: Service
metadata:
  name: emergency-brake
  namespace: {{ .Values.namespace }}
spec:
  selector:
    app: emergency-brake
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: ClusterIP
{{- end }}
