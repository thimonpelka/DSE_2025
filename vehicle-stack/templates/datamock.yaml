{{- if .Values.services.datamock.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: datamock
  namespace: {{ .Values.namespace }}
  labels:
    app: datamock
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datamock
  template:
    metadata:
      labels:
        app: datamock
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox
          command: [ 'sh', '-c', 'until nc -z rabbitmq.{{ .Values.rabbitmq.namespace }}.svc.cluster.local 5672; do echo waiting for rabbitmq; sleep 2; done;' ]
      containers:
      - name: datamock
        image: "{{ .Values.services.datamock.image.repository }}:{{ .Values.services.datamock.image.tag }}"
        ports:
        - containerPort: 5000
        env:
        - name: VEHICLE_ID
          value: "{{ .Values.namespace }}"
        - name: RABBITMQ_HOST
          value: "rabbitmq.{{ .Values.rabbitmq.namespace }}.svc.cluster.local"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: username
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: password
---
apiVersion: v1
kind: Service
metadata:
  name: datamock-service
  namespace: {{ .Values.namespace }}
spec:
  ports:
  - port: 80
    targetPort: 5000
  selector:
    app: datamock
{{- end }}
